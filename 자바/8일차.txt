학습목표: 
 
1. 매서드 호출시  call by value, call by reference를 구분할 수 있다.
2. Math클래스가 제공하는 기능을 사용할 수 있다(  min, max 사용해보기)
3. 내가 만든 함수를 라이브러리로 만들 수 있다.
4. 친구들이 만든 라이브러리를 사용할 수 있다 .
5. 학생관리프로그램을 함수로 나눠서 작성하기  (프로그램을 구조화 하기)
6. Class type 만들고 고객정보를  출력하는 경험을 갖는다. 클래스 맛보기 -객체데이터 다루어보기
   -객체지향프로그램에서는 어떻게 변수를 만들고 데이터를 저장하고 이용하는가?




  실습)
1.  자신이 만든 매서드를 라이브러리로 만들고 사용하기   
2.  약수구하기   라이브러리만들기  
3.  화폐매수 구하기 라이브러리 만들기



일정관리 프로그램
1. 5개 일정을 관리하는 프로그램 작성  (main에서 작성하기 ) 
   등록, 조회

2. 5개일정을 관리하는 프로그램 작성   (main에서 작성하기)
  등록, 조회, 변경, 삭제 ( 삭제시 내용에 0을 넣는 것으로 한다.)


3. 1번을 함수로 분리하기  (등록, 조회)
4. 2번을 함수로 분리하기 (등록, 조회, 변경, 삭제)

5. 일주일 일정을관리하는 프로그램작성 (하루에 5개 이내) -main에서
6. 일주일 일정을관리하는 프로그램작성 (하루에 5개 이내) -함수로 분리하기 




자신만의 라이브러리 만들기 

클래스명(자신의 이름 WJY)

class  클래스명 {
    // 매서드 (함수)  

}

0. 라이브러리 만들기
1.  Test 프로그램  라이브러리 테스트 
2.  파일 -> export ->  java ->  jar    -> 파일선택  -> 원하는 위치선택    이름.jar   저장
3.  사용할 때 
    프로젝트  -> 우클릭-> build path   -> librarys ->  class path  ->  external jar  선택   ->저장한 위치의  jar 파일 선택 



 



